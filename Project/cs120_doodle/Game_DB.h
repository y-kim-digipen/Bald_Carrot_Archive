/*
File name : Game_DB.h
Game name : Bald Carrot in Dark KMU
the course name  : GAM100
the term : Fall 2019
Author(primary) : sieun choi
Author(secondary) : Yoonki Kim
¡°All content (C) 2019 DigiPen (USA) Corporation, all rights reserved.¡±
*/
#ifndef __GAME_DB_H__
#define __GAME_DB_H__

#include <vector>
#include <doodle/doodle.hpp>

namespace Game_DB {

	inline const doodle::HexColor background_color = 0x000000FF;
	inline const unsigned int width = 690;
	inline const unsigned int height = 690;
	inline const unsigned short game_ratio = 5;
};
//Tilesize map color of map -z

namespace Boss_DB {
	namespace First {
		inline const float width = 7.0f * Game_DB::game_ratio;
		inline const float height = 8.0f * Game_DB::game_ratio;

		inline const float move_speed = 1.0f;

		inline const float first_shoot_delay = 5.0f;
	}
}
namespace Map_DB {

	inline const  doodle::HexColor Wall_color = { 0xFFFFFFFF };
	inline const  doodle::HexColor Tile_color = { 0x4381de };

	inline const float width = Game_DB::width;
	inline const float height = Game_DB::height;
	inline unsigned int map_column = 23;
	inline unsigned int map_row = 23;
	inline float rect_width = width / map_row;
	inline float rect_height = height / map_column;

	inline const float width_h = 350.0f;
	inline const float height_h = 350.0f;

	

	inline std::vector<std::vector<int>>map_info{

		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}



};
	inline std::vector<std::vector<int>>Mage_info{

		//1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1},//1
		{1,0,0,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1},//2
		{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1},//3
		{1,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,1},//4
		{1,0,1,0,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1},//5
		{1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,1,0,1},//6
		{1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,1,0,1},//7
		{1,0,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,1,0,1},//8
		{1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1},//9
		{1,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,1,0,1,0,1},//0
		{1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1},//11
		{1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,0,0,1,0,1,0,1},//12
		{1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1},//13
		{1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1},//14
		{1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1},//15
		{1,0,1,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1},//16
		{1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,0,1},//17
		{1,0,1,0,0,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,0,0,1},//18
		{1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1},//19
		{1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,3,0,1},//20
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}



	};
	inline std::vector<std::vector<int>>tuto_info{

		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1},
		{1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}



	};

}

namespace Player_DB {
		inline const doodle::HexColor Player_color = { 0xE7E7D1FF };
		inline const doodle::HexColor Player_invicible_color = { 0xE43526FF };
		inline const doodle::HexColor Player_parrying_color = { 0xadff2fFF };
		inline const float width = 5 * Game_DB::game_ratio;
		inline const float height = 5 * Game_DB::game_ratio;
		inline const float bullet_speed = 3.6f;
		inline const float accel_speed = 1.5f;
		inline const float bullet_radius = 10.0f;
	
};

#endif